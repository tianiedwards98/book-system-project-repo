package com.company.bookservice.controller;

import com.company.bookservice.dao.BookDao;
import com.company.bookservice.models.Book;
import com.company.bookservice.service.BookViewModel;
import com.company.bookservice.service.ServiceLayer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import java.util.List;
@RestController
@RefreshScope
public class BookServiceController {
    @Autowired
    ServiceLayer serviceLayer;

    //    Create Book
//===========
//    URI: /books
//    HTTP Method: POST
//    RequestBody: Book data (minus ID)
//    ResponseBody: Book data (plus autogenerated ID)
    @RequestMapping(value = "/books", method = RequestMethod.POST)
    @ResponseStatus(HttpStatus.CREATED)
    public BookViewModel createBook(@RequestBody BookViewModel book) {
        return serviceLayer.createBook(book);
    }

    //    Get Book
//========
//    URI: /books/{id}
//    HTTP Method: GET
//    RequestBody: None
//    ResponseBody: Book data
    @RequestMapping(value = "/books/{id}", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public BookViewModel getBookById(@PathVariable int id) {
        return serviceLayer.getBookById(id);
    }

    //    Get All Books
//=============
//    URI: /books
//    HTTP Method: GET
//    RequestBody: None
//    ResponseBody: Array of Book data
    @RequestMapping(value = "/books", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public List<BookViewModel> getAllBooks() {
        return serviceLayer.getAllBooks();
    }

    //    Update Book
//===========
//    URI: /books/{id}
//    HTTP Method: PUT
//    RequestBody: Book data
//    ResponseBody: None
    @RequestMapping(value = "/books/{id}", method = RequestMethod.PUT)
    @ResponseStatus(HttpStatus.OK)
    public void updateBook(@PathVariable int id, @RequestBody BookViewModel book) {
        book.setBookId(id);
        serviceLayer.updateBook(book);
    }

    //    Delete Book
//===========
//    URI: /books/{id}
//    HTTP Method: DELETE
//    RequestBody: None
//    ResponseBody: None
    @RequestMapping(value = "/books/{id}", method = RequestMethod.DELETE)
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteBook(@PathVariable int id) {
        serviceLayer.deleteBook(id);
    }
}
